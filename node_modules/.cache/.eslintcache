[{"/home/nicalcoca/Documents/Trabajo/IGAC/qgeoidal_model/qgeoidcol-web/front_end/branchs/primera/qgeoidcolweb-f/src/index.js":"1","/home/nicalcoca/Documents/Trabajo/IGAC/qgeoidal_model/qgeoidcol-web/front_end/branchs/primera/qgeoidcolweb-f/src/App.js":"2","/home/nicalcoca/Documents/Trabajo/IGAC/qgeoidal_model/qgeoidcol-web/front_end/branchs/primera/qgeoidcolweb-f/src/reportWebVitals.js":"3"},{"size":535,"mtime":1689031960795,"results":"4","hashOfConfig":"5"},{"size":2513,"mtime":1689193412028,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1688841923994,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m6de7e",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/nicalcoca/Documents/Trabajo/IGAC/qgeoidal_model/qgeoidcol-web/front_end/branchs/primera/qgeoidcolweb-f/src/index.js",[],[],"/home/nicalcoca/Documents/Trabajo/IGAC/qgeoidal_model/qgeoidcol-web/front_end/branchs/primera/qgeoidcolweb-f/src/App.js",["19"],[],"import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n\n\n  // Para guardar el token y establecerlo en cada fetch\n  const [csrfToken, setCSRFToken] = useState('');\n\n  useEffect(() => {\n\n    const fetchCSRFToken = async () => {\n\n      try {\n\n        const response = await fetch(\"http://127.0.0.1:8000/preprocesos/csrf_token\");\n        const data = await response.json();\n        setCSRFToken(data.csrfToken);\n    \n      } catch (error) {\n    \n        console.error(error);\n    \n      }\n\n    };\n\n    fetchCSRFToken();\n\n  }, [csrfToken])\n\n  // Para traer datos con el mÃ©todo GET para una vista dada\n\n  const [projects, setProjects] = useState([]);\n\n  useEffect((csrfToken) => {\n\n    const getRequest = async (csrfToken, callback) => {\n\n      try {\n        \n        const response = await fetch('http://127.0.0.1:8000/preprocesos/mostrar_prjs_terr', {\n          method: 'GET',\n          headers: {\n            'X-CSRFToken': csrfToken,\n          },\n        });\n\n\n        const data = await response.json();\n        const array = JSON.parse(data.prjs);\n        callback(array);\n  \n      } catch (error) {\n  \n        console.error(error);\n  \n      }\n  \n    };\n\n    const myCallback = (element) => {\n      setProjects(element);\n    };\n\n    getRequest(csrfToken, myCallback);\n  \n  }, [])\n\n  const postRequest = async (csrfToken, my_data) => {\n\n    try {\n\n      const response = await fetch('http://127.0.0.1:8000/preprocesos/api/rcbr_args_prjs_trr', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken,\n        },\n        body: JSON.stringify({data: my_data}),\n      });\n\n      const data = await response.json();\n\n    } catch (error) {\n\n      console.error(error);\n\n    }\n  };\n\n  postRequest(csrfToken, projects);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>\n          {projects.map((project, index) => {\n            return <li key={index}>{project.fields.name} (en {project.fields.file}): {project.fields.detalles}</li>\n          })}\n        </p>\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n\n\n      </header>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","/home/nicalcoca/Documents/Trabajo/IGAC/qgeoidal_model/qgeoidcol-web/front_end/branchs/primera/qgeoidcolweb-f/src/reportWebVitals.js",[],[],[],{"ruleId":"20","severity":1,"message":"21","line":85,"column":13,"nodeType":"22","messageId":"23","endLine":85,"endColumn":17},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]